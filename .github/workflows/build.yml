# SPDX-FileCopyrightText: 2014 MicroPython & CircuitPython contributors (https://github.com/adafruit/circuitpython/graphs/contributors)
#
# SPDX-License-Identifier: MIT

name: Build CI

on:
  push:
  pull_request:
  release:
    types: [published]
  check_suite:
    types: [rerequested]

jobs:
  scheduler-xtensa:
    runs-on: ubuntu-20.04
    steps:
    - name: Cache build environment
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip/
          /home/runner/work/circuitpython/
        key: ${{ github.run_id }}-${{ github.run_number }}
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/checkout@v2.2.0
      with:
        submodules: true
        fetch-depth: 0
    - run: git fetch --recurse-submodules=no https://github.com/adafruit/circuitpython refs/tags/*:refs/tags/*
    - name: CircuitPython version
      run: git describe --dirty --tags
    - name: Clone IDF submodules
      run: |
        (cd $IDF_PATH && git submodule update --init)
      env:
        IDF_PATH: ${{ github.workspace }}/ports/esp32s2/esp-idf
    - name: Install IDF tools
      run: |
        $IDF_PATH/tools/idf_tools.py --non-interactive install required
        $IDF_PATH/tools/idf_tools.py --non-interactive install cmake
        $IDF_PATH/tools/idf_tools.py --non-interactive install-python-env
        rm -rf $IDF_TOOLS_PATH/dist
      env:
        IDF_PATH: ${{ github.workspace }}/ports/esp32s2/esp-idf
        IDF_TOOLS_PATH: ${{ github.workspace }}/.idf_tools
    - name: Install CircuitPython deps
      run: |
        source $IDF_PATH/export.sh
        pip install -r requirements-dev.txt
        sudo apt-get install -y gettext ninja-build
      env:
        IDF_PATH: ${{ github.workspace }}/ports/esp32s2/esp-idf
        IDF_TOOLS_PATH: ${{ github.workspace }}/.idf_tools
    - name: mpy-cross
      run: make -C mpy-cross -j2

  build-xtensa:
    runs-on: ubuntu-20.04
    needs: scheduler-xtensa
    strategy:
      fail-fast: false
      matrix:
        board:
        - "adafruit_feather_esp32s2_nopsram"
        - "adafruit_feather_esp32s2_tftback_nopsram"
        - "adafruit_funhouse"
        - "adafruit_magtag_2.9_grayscale"
        - "adafruit_metro_esp32s2"
        - "artisense_rd00"
        - "atmegazero_esp32s2"
        - "electroniccats_bastwifi"
        - "espressif_kaluga_1"
        - "espressif_kaluga_1.3"
        - "espressif_saola_1_wroom"
        - "espressif_saola_1_wrover"
        - "franzininho_wifi_wroom"
        - "franzininho_wifi_wrover"
        - "lilygo_ttgo_t8_s2_st7789"
        - "microdev_micro_s2"
        - "muselab_nanoesp32_s2_wroom"
        - "muselab_nanoesp32_s2_wrover"
        - "targett_module_clip_wroom"
        - "targett_module_clip_wrover"
        - "unexpectedmaker_feathers2"
        - "unexpectedmaker_feathers2_prerelease"
        - "unexpectedmaker_tinys2"

    steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Cache build environment
      id: cache-build-env
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip/
          /home/runner/work/circuitpython/
        key: ${{ github.run_id }}-${{ github.run_number }}
    - name: Check cache-miss
      if: steps.cache-build-env.outputs.cache-hit != 'true'
      run: |
        echo "Cache-miss spotted. Aborting..."
        exit 1
    - name: Install deps
      run: |
        pip install -r requirements-dev.txt
        sudo apt-get install -y gettext ninja-build
    - name: Versions
      run: |
        source $IDF_PATH/export.sh
        gcc --version
        xtensa-esp32s2-elf-gcc --version
        python3 --version
        ninja --version
        cmake --version
      shell: bash
      env:
        IDF_PATH: ${{ github.workspace }}/ports/esp32s2/esp-idf
        IDF_TOOLS_PATH: ${{ github.workspace }}/.idf_tools
    - name: Setup build failure matcher
      run: echo "::add-matcher::$GITHUB_WORKSPACE/.github/workflows/match-build-fail.json"
    - name: build
      run: |
        source $IDF_PATH/export.sh
        python3 -u build_release_files.py
      working-directory: tools
      shell: bash
      env:
        IDF_PATH: ${{ github.workspace }}/ports/esp32s2/esp-idf
        IDF_TOOLS_PATH: ${{ github.workspace }}/.idf_tools
        BOARDS: ${{ matrix.board }}
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.board }}
        path: bin/${{ matrix.board }}
    - name: Upload to S3
      run: "[ -z \"$AWS_ACCESS_KEY_ID\" ] || aws s3 cp bin/ s3://adafruit-circuit-python/bin/ --recursive --no-progress --region us-east-1"
      env:
        AWS_PAGER: ''
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      if: github.event_name == 'push' || (github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'rerequested'))
